<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/**
* @Class Name : MyPageMapper.xml
* @Description : 1:1문의 페이지에서 필요한 데이터들을 가져오기 위한 mapper
* @Modification Information
* @
* @  수정일     	  수정자                 수정내용
* @ ===========  ========   ============================
* @ 2019.07.18     한유진      최초생성
* @ 2019.07.24		박현민		one_get  부분 추가
* @author bit 2조
* @since 2019. 07.01
* @version 1.0
* @see
*
*  Copyright (C) by Bit All right reserved.
*/ 
-->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0.//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mypage.MyPageDAO">

	<resultMap type="com.spring.mypage.OneVO" id="merberQnaMap">
		<result property="qna_no" column="qna_no"/>
		<result property="id" column="id"/>
		<result property="qna_category" column="qna_category"/>
		<result property="qna_title" column="qna_title"/>
		<result property="qna_content" column="qna_content"/>
		<result property="qna_date" column="qna_date"/>
		<result property="qna_update_date" column="qna_update_date"/>
		<result property="qna_answer" column="qna_answer"/>
	</resultMap>
		
	<resultMap type="com.spring.member.MemberVO" id="getMemberMap">
		<result property="id" column="id"/>
		<result property="m_nickname" column="m_nickname"/>
		<result property="m_image" column="m_image"/>
		<result property="m_email" column="m_email"/>
		<result property="m_eagree" column="m_eagree"/>
		<result property="m_sagree" column="m_sagree"/>
		<result property="m_name" column="m_name"/>
		<result property="m_phone" column="m_phone"/>
		<result property="m_cert" column="m_cert"/>
		<result property="m_password" column="m_password"/>
		<result property="m_regdate" column="m_regdate"/>
		<result property="m_update_date" column="m_update_date"/>
		<result property="m_deleteyn" column="m_deleteyn"/>
		<result property="m_following" column="m_following"/>
		<result property="m_follower" column="m_follower"/>
		<result property="m_level" column="m_level"/>
		<result property="m_favorite" column="m_favorite"/>
		<result property="m_blacklist" column="m_blacklist"/>
	</resultMap>
	
	<!-- hm | 1:1문의 답변 resultMap추가  -->
	<resultMap type="com.spring.mypage.OneAdVO" id="adminQnaMap">
		<result property="aqna_no" column="aqna_no"/>
		<result property="qna_no" column="qna_no"/>
		<result property="aqna_content" column="aqna_content"/>
		<result property="aqna_date" column="aqna_date"/>
		<result property="aqna_update_date" column="aqna_update_date"/>
		<result property="admin_num" column="admin_num"/>
	</resultMap>
	<!-- hm | 1:1문의 답변 resultMap추가 끝  -->
	
	<resultMap type="com.spring.mypage.FolFolDTO" id="getfolMap">
		<result property="id" column="id"/>
		<result property="m_nickname" column="m_nickname"/>
		<result property="mf_ing" column="mf_ing"/>
		<result property="mf_wer" column="mf_wer"/>
	</resultMap>
	
	<resultMap type="com.spring.mypage.MyBoardDTO" id="boardDTOMap">
		<result property="id" column="id"/>
		<result property="bno" column="bf_bno"/>
		<result property="category" column="bf_category"/>
		<result property="title" column="bf_title"/>
		<result property="reg_date" column="bf_reg_date"/>
		<result property="bno" column="bs_bno"/>
		<result property="category" column="bs_category"/>
		<result property="title" column="bs_title"/>
		<result property="reg_date" column="bs_reg_date"/>
	</resultMap>
	
	<select id="getMemberName" parameterType="String" resultType="String">
		select M_NAME from member where M_EMAIL=#{m_email, jdbcType=VARCHAR}
	</select>
	
	<select id="getMemberNickname" parameterType="String" resultType="String">
		select M_NICKNAME from member where M_EMAIL=#{m_email, jdbcType=VARCHAR}
	</select>
	
	<update id="insertProfileImage" >
		update member set m_image=#{m_image, jdbcType=VARCHAR} where id=#{id}
	</update>
	
	<select id="getMemberId" parameterType="String" resultType="int">
		select ID from member where M_EMAIL=#{m_email, jdbcType=VARCHAR}
	</select>
	
	<select id="getQnaList" parameterType="int" resultMap="merberQnaMap">
		select * from board_qna where ID=#{id} order by QNA_NO desc
	</select>
	
	<select id="getMember" parameterType="int" resultMap="getMemberMap">
		select * from member where id=#{id}
	</select>
	
	<select id="getMembers" resultType="com.spring.member.MemberVO">
		select * from member
	</select>
	
	<update id="updateMember" parameterType="com.spring.member.MemberVO">
		update member set m_phone=#{m_phone},m_favorite=#{m_favorite},m_sagree=#{m_sagree},m_eagree=#{m_eagree} where id=#{id}
	</update>
	
	<update id="updatePw" parameterType="com.spring.member.MemberVO">
		update member set m_password=#{m_password} where id=#{id}
	</update>
	
	<update id="updateNick" parameterType="com.spring.member.MemberVO">
		update member set m_nickname=#{m_nickname} where id=#{id}
	</update>
	
	<insert id="insertQna" parameterType="com.spring.mypage.OneVO">
		insert into board_qna values (seq_qna_no.nextval, #{id}, #{qna_category, jdbcType=VARCHAR}, #{qna_title, jdbcType=VARCHAR}
		, #{qna_content, jdbcType=VARCHAR}, sysdate, sysdate, 'N')
	</insert>
	
	<select id="getQnaDetail" parameterType="int" resultMap="merberQnaMap">
		select * from board_qna where QNA_NO=#{qna_no}
	</select>
	
	<update id="updateQna" parameterType="com.spring.mypage.OneVO">
		UPDATE board_qna SET QNA_CATEGORY=#{qna_category, jdbcType=VARCHAR}, QNA_TITLE=#{qna_title, jdbcType=VARCHAR}, QNA_CONTENT=#{qna_content, jdbcType=VARCHAR}, QNA_UPDATE_DATE=sysdate WHERE QNA_NO=#{qna_no}
	</update>
	
	<!-- hm | 1:1문의 답변 가져오기 -->
	<select id="getQnaAdDetail" resultType="com.spring.mypage.OneAdVO" parameterType="com.spring.mypage.OneAdVO">
		SELECT qna_no, aqna_content, aqna_update_date FROM ad_qna WHERE qna_no = #{qna_no}
	</select>
	
	<!-- hm | 1:1문의 삭제 -->
	<delete id="deleteQnaDetail" parameterType="String">
		delete FROM board_qna WHERE qna_no = #{qna_no}
	</delete>
	
	<delete id="deleteQna">
		delete FROM board_qna WHERE qna_no = #{qna_no}
	</delete>
	
	<!-- kgh | 비밀번호 변경 -->
	
	<!-- kgh | 비밀번호 체크  -->
	 <select id="checkPw" resultType="Int">
	 	select 
	 		count(*)
	 		from member
	 		where m_email = #{m_email ,jdbcType=VARCHAR} and m_password = #{m_password ,jdbcType=VARCHAR}
	 </select>
	 
	 <!-- kgh | 회원 탈퇴신청 -->
	 <update id="delete_member">
	 	update member
	 	set 
	 		m_deleteyn = 'Y'
	 	where
	 		m_email = #{m_email, jdbcType=VARCHAR}
	 </update>
	 <update id="delete_date">
	 	 update delete_member
	 	 set
	 	 	delete_date = SYSDATE
	 	 where
	 	 	id = #{id}
	 </update>
	 
	 <select id="checkNick" parameterType="String" resultType="int">
		select count(m_nickname)
		from member
		where m_nickname = #{m_nickname, jdbcType=VARCHAR}
	</select>
	
	<select id="getfollower" parameterType="int" resultMap="getfolMap">
		select id,m_nickname from member where id in(
        select mf_wer from member_follow where mf_ing=#{id})
	</select>
	
	<select id="getfollowing" resultMap="getfolMap">
		select id,m_nickname from member where id in(
        select mf_ing from member_follow where mf_wer=#{id})
	
	</select>
	
	<select id="countArticles" resultType="int">
        <![CDATA[
	        SELECT COUNT(qna_no)
	        FROM board_qna
	        WHERE id=#{id} and qna_no > 0
        ]]>
    </select>
    
     <select id="listCriteria" resultMap="merberQnaMap">
        <![CDATA[
			select rn, qna_no , id , qna_category , qna_title , qna_content , qna_date , qna_update_date , qna_answer
			from(
				select rownum rn , qna_no , id , qna_category , qna_title , qna_content , qna_date , qna_update_date , qna_answer
				from(
					select qna_no , id , qna_category , qna_title , qna_content , qna_date , qna_update_date , qna_answer
					from board_qna
					order by qna_no desc
					)
				)
			where id=#{id} and rn > (#{page} -1) *#{perPageNum} and rn <= #{page} * #{perPageNum}
        ]]>
    </select>
    
	<select id="getFreeCount" parameterType="int" resultType="int">
		select count(*)
		from board_free
		where id=#{id}
	</select>
	
	<select id="getShareCount" parameterType="int" resultType="int">
		select count(*)
		from board_share
		where id=#{id}
	</select>
	
	<select id="getFreeBoard" resultMap="boardDTOMap">
		<![CDATA[
		select rn, id, bf_bno, bf_category, bf_title, bf_reg_date
		from (
			select rownum rn, id, bf_bno, bf_category, bf_title, bf_reg_date
			from(
				select id, bf_bno, bf_category, bf_title, bf_reg_date
				from board_free
				order by bf_reg_date
				)
			)
		where id=#{id} and rn > (#{page} -1) *#{perPageNum} and rn <= #{page} * #{perPageNum}
		]]>
	</select>
	
	<select id="getShareBoard" resultMap="boardDTOMap">
		<![CDATA[
		select rn, id, bs_bno, bs_category, bs_title, bs_reg_date
		from (
			select rownum rn, id, bs_bno, bs_category, bs_title, bs_reg_date
			from(
				select id, bs_bno, bs_category, bs_title, bs_reg_date
				from board_share
				order by bs_reg_date
				)
			)
		where id=#{id} and rn > (#{page} -1) *#{perPageNum} and rn <= #{page} * #{perPageNum}
		]]>
	</select>
	
</mapper>
